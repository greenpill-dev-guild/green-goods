{"abi":[{"type":"function","name":"getAccount","inputs":[{"name":"implementation","type":"address","internalType":"address"},{"name":"tokenContract","type":"address","internalType":"address"},{"name":"tokenId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"error","name":"InvalidChainId","inputs":[]}],"bytecode":{"object":"0x60808060405234601b5761039590816100208239308160640152f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c80631230aea21461006157634c6fc9631461002f575f80fd5b602061004361003d366100a0565b916102c2565b73ffffffffffffffffffffffffffffffffffffffff60405191168152f35b307f00000000000000000000000000000000000000000000000000000000000000001461009c576020610043610096366100a0565b9161019a565b5f80fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc606091011261009c5773ffffffffffffffffffffffffffffffffffffffff90600435828116810361009c5791602435908116810361009c579060443590565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761014157604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b9081602091031261009c575173ffffffffffffffffffffffffffffffffffffffff8116810361009c5790565b9061a4b1461480156102b6575b1561028c576040517f8a54c52f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831660048201527f6551655165516551655165516551655165516551655165516551655165516551602482015246604482015291166064820152608481019190915260208160a4815f6f6551c19487814612e58fe068137757585af1908115610281575f91610255575090565b610277915060203d60201161027a575b61026f8183610100565b81019061016e565b90565b503d610265565b6040513d5f823e3d90fd5b60046040517f7a47c9a2000000000000000000000000000000000000000000000000000000008152fd5b5062aa36a746146101a7565b9061a4b14614801561037c575b1561028c576040517f246a002100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831660048201527f6551655165516551655165516551655165516551655165516551655165516551602482015246604482015291166064820152608481019190915260208160a4816f6551c19487814612e58fe068137757585afa908115610281575f91610255575090565b5062aa36a746146102cf56fea164736f6c6343000819000a","sourceMap":"430:1961:103:-:0;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x60806040526004361015610011575f80fd5b5f3560e01c80631230aea21461006157634c6fc9631461002f575f80fd5b602061004361003d366100a0565b916102c2565b73ffffffffffffffffffffffffffffffffffffffff60405191168152f35b307f00000000000000000000000000000000000000000000000000000000000000001461009c576020610043610096366100a0565b9161019a565b5f80fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc606091011261009c5773ffffffffffffffffffffffffffffffffffffffff90600435828116810361009c5791602435908116810361009c579060443590565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761014157604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b9081602091031261009c575173ffffffffffffffffffffffffffffffffffffffff8116810361009c5790565b9061a4b1461480156102b6575b1561028c576040517f8a54c52f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831660048201527f6551655165516551655165516551655165516551655165516551655165516551602482015246604482015291166064820152608481019190915260208160a4815f6f6551c19487814612e58fe068137757585af1908115610281575f91610255575090565b610277915060203d60201161027a575b61026f8183610100565b81019061016e565b90565b503d610265565b6040513d5f823e3d90fd5b60046040517f7a47c9a2000000000000000000000000000000000000000000000000000000008152fd5b5062aa36a746146101a7565b9061a4b14614801561037c575b1561028c576040517f246a002100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92831660048201527f6551655165516551655165516551655165516551655165516551655165516551602482015246604482015291166064820152608481019190915260208160a4816f6551c19487814612e58fe068137757585afa908115610281575f91610255575090565b5062aa36a746146102cf56fea164736f6c6343000819000a","sourceMap":"430:1961:103:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;879:66:97:-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;430:1961:103;;;;;;;879:66:97;:::o;888:519:103:-;;1033:5;1016:13;:22;:51;;;;888:519;1012:389;;;430:1961;;879:66:97;1106:230:103;;430:1961;;;;1106:230;;;430:1961;879:66:97;;;;;1016:13:103;879:66:97;;;;430:1961:103;;879:66:97;;;430:1961:103;879:66:97;;;;;;;1106:230:103;430:1961;879:66:97;430:1961:103;-1:-1:-1;1057:42:97;1106:230:103;;;;;;;;;;;1083:253;;:::o;1106:230::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;1083:253;:::o;1106:230::-;;;;;;430:1961;;879:66:97;1106:230:103;879:66:97;;;;;1012:389:103;1374:16;430:1961;;1374:16;;;;1016:51;:13;1059:8;1016:13;1042:25;1016:51;;1844:545;;2021:5;2004:13;:22;:51;;;;1844:545;2000:383;;;430:1961;;879:66:97;2094:224:103;;430:1961;;;;2094:224;;;430:1961;879:66:97;;;;;2004:13:103;879:66:97;;;;430:1961:103;;879:66:97;;;430:1961:103;879:66:97;;;;;;;2094:224:103;430:1961;879:66:97;430:1961:103;1057:42:97;2094:224:103;;;;;;;-1:-1:-1;2094:224:103;;;2071:247;;:::o;2004:51::-;:13;2047:8;2004:13;2030:25;2004:51;","linkReferences":{},"immutableReferences":{"library_deploy_address":[{"start":100,"length":32}]}},"methodIdentifiers":{"createAccount(address,address,uint256)":"1230aea2","getAccount(address,address,uint256)":"4c6fc963"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidChainId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This library handles the creation and retrieval of TBA accounts based on the current chain ID.\",\"kind\":\"dev\",\"methods\":{\"createAccount(address,address,uint256)\":{\"details\":\"Reverts with `InvalidChainId` if the chain ID is not recognized.\",\"params\":{\"implementation\":\"The address of the TBA implementation contract.\",\"tokenContract\":\"The address of the token contract associated with the TBA.\",\"tokenId\":\"The ID of the token associated with the TBA.\"},\"returns\":{\"_0\":\"The address of the created TBA account.\"}},\"getAccount(address,address,uint256)\":{\"details\":\"Reverts with `InvalidChainId` if the chain ID is not recognized.\",\"params\":{\"implementation\":\"The address of the TBA implementation contract.\",\"tokenContract\":\"The address of the token contract associated with the TBA.\",\"tokenId\":\"The ID of the token associated with the TBA.\"},\"returns\":{\"_0\":\"The address of the TBA account.\"}}},\"title\":\"TBALib\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAccount(address,address,uint256)\":{\"notice\":\"Creates a TBA account based on the current chain ID.\"},\"getAccount(address,address,uint256)\":{\"notice\":\"Retrieves a TBA account based on the current chain ID.\"}},\"notice\":\"A library for interacting with Token Bound Accounts (TBA) on different chains.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/lib/TBA.sol\":\"TBALib\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@eas/=node_modules/@ethereum-attestation-service/eas-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=lib/tokenbound/lib/openzeppelin-contracts/contracts/\",\":@tokenbound/=lib/tokenbound/src/\",\":account-abstraction/=lib/tokenbound/lib/account-abstraction/contracts/\",\":ds-test/=lib/tokenbound/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/tokenbound/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc6551/=lib/tokenbound/lib/erc6551/src/\",\":forge-std/=lib/tokenbound/lib/forge-std/src/\",\":multicall-authenticated/=lib/tokenbound/lib/multicall-authenticated/\",\":openzeppelin-contracts/=lib/tokenbound/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/tokenbound/lib/openzeppelin-contracts/contracts/\",\":tokenbound/=lib/tokenbound/\"],\"viaIR\":true},\"sources\":{\"src/Constants.sol\":{\"keccak256\":\"0xad05eaecec4c723d9f6bfeb4abfd59ff17622c64174987f272a11c40080e2c1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740c283abc8af5c7bfa78804bcf62c4cc4a9e337f039faa489928476650662a0\",\"dweb:/ipfs/QmceMgBFqWP5ULGeTvjQuH4KJ2q7e5MaYUjPtnpT1kMjgP\"]},\"src/interfaces/IERC6551Registry.sol\":{\"keccak256\":\"0x3603a5b6e31a13279da73b271f0d94a063be30be1d1580bcc54ae21ca5a901a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65434f79aca2889832b45f3cb67f90b2e8497c8c049d514d8c2732771f8816f2\",\"dweb:/ipfs/QmNXXh4TEwtzhS3xwFPqvLVXFUHc9XPhawtBzQebuy1YJK\"]},\"src/lib/TBA.sol\":{\"keccak256\":\"0xc6138a11d623884127b1c996f43b92f1798b7db72bd83f388c3644942a1de989\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22996a880270168bd22a69992a079e21339c89c2d0ab9f8445e390965d176185\",\"dweb:/ipfs/QmZ74SWciW8tQfyXfZJrfwcAQGKkBL6ZvmGpAK8PmQZuXP\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"InvalidChainId"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"address","name":"tokenContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function","name":"getAccount","outputs":[{"internalType":"address","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"createAccount(address,address,uint256)":{"details":"Reverts with `InvalidChainId` if the chain ID is not recognized.","params":{"implementation":"The address of the TBA implementation contract.","tokenContract":"The address of the token contract associated with the TBA.","tokenId":"The ID of the token associated with the TBA."},"returns":{"_0":"The address of the created TBA account."}},"getAccount(address,address,uint256)":{"details":"Reverts with `InvalidChainId` if the chain ID is not recognized.","params":{"implementation":"The address of the TBA implementation contract.","tokenContract":"The address of the token contract associated with the TBA.","tokenId":"The ID of the token associated with the TBA."},"returns":{"_0":"The address of the TBA account."}}},"version":1},"userdoc":{"kind":"user","methods":{"createAccount(address,address,uint256)":{"notice":"Creates a TBA account based on the current chain ID."},"getAccount(address,address,uint256)":{"notice":"Retrieves a TBA account based on the current chain ID."}},"version":1}},"settings":{"remappings":["@eas/=node_modules/@ethereum-attestation-service/eas-contracts/contracts/","@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts/=lib/tokenbound/lib/openzeppelin-contracts/contracts/","@tokenbound/=lib/tokenbound/src/","account-abstraction/=lib/tokenbound/lib/account-abstraction/contracts/","ds-test/=lib/tokenbound/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/tokenbound/lib/openzeppelin-contracts/lib/erc4626-tests/","erc6551/=lib/tokenbound/lib/erc6551/src/","forge-std/=lib/tokenbound/lib/forge-std/src/","multicall-authenticated/=lib/tokenbound/lib/multicall-authenticated/","openzeppelin-contracts/=lib/tokenbound/lib/openzeppelin-contracts/","openzeppelin/=lib/tokenbound/lib/openzeppelin-contracts/contracts/","tokenbound/=lib/tokenbound/"],"optimizer":{"enabled":true,"runs":10000},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"src/lib/TBA.sol":"TBALib"},"evmVersion":"shanghai","libraries":{},"viaIR":true},"sources":{"src/Constants.sol":{"keccak256":"0xad05eaecec4c723d9f6bfeb4abfd59ff17622c64174987f272a11c40080e2c1a","urls":["bzz-raw://740c283abc8af5c7bfa78804bcf62c4cc4a9e337f039faa489928476650662a0","dweb:/ipfs/QmceMgBFqWP5ULGeTvjQuH4KJ2q7e5MaYUjPtnpT1kMjgP"],"license":"MIT"},"src/interfaces/IERC6551Registry.sol":{"keccak256":"0x3603a5b6e31a13279da73b271f0d94a063be30be1d1580bcc54ae21ca5a901a6","urls":["bzz-raw://65434f79aca2889832b45f3cb67f90b2e8497c8c049d514d8c2732771f8816f2","dweb:/ipfs/QmNXXh4TEwtzhS3xwFPqvLVXFUHc9XPhawtBzQebuy1YJK"],"license":"MIT"},"src/lib/TBA.sol":{"keccak256":"0xc6138a11d623884127b1c996f43b92f1798b7db72bd83f388c3644942a1de989","urls":["bzz-raw://22996a880270168bd22a69992a079e21339c89c2d0ab9f8445e390965d176185","dweb:/ipfs/QmZ74SWciW8tQfyXfZJrfwcAQGKkBL6ZvmGpAK8PmQZuXP"],"license":"MIT"}},"version":1},"id":103}