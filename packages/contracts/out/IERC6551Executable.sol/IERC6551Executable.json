{"abi":[{"type":"function","name":"execute","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"operation","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"payable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"execute(address,uint256,bytes,uint8)":"51945447"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint8\",\"name\":\"operation\",\"type\":\"uint8\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"the ERC-165 identifier for this interface is `0x51945447`\",\"kind\":\"dev\",\"methods\":{\"execute(address,uint256,bytes,uint8)\":{\"details\":\"Executes a low-level operation if the caller is a valid signer on the account. Reverts and bubbles up error if operation fails. Accounts implementing this interface MUST accept the following operation parameter values: - 0 = CALL - 1 = DELEGATECALL - 2 = CREATE - 3 = CREATE2 Accounts implementing this interface MAY support additional operations or restrict a signer's ability to execute certain operations.\",\"params\":{\"data\":\"The encoded operation calldata\",\"operation\":\"A value indicating the type of operation to perform\",\"to\":\"The target address of the operation\",\"value\":\"The Ether value to be sent to the target\"},\"returns\":{\"_0\":\"The result of the operation\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/tokenbound/lib/erc6551/src/interfaces/IERC6551Executable.sol\":\"IERC6551Executable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@eas/=node_modules/@ethereum-attestation-service/eas-contracts/contracts/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=lib/tokenbound/lib/openzeppelin-contracts/contracts/\",\":@tokenbound/=lib/tokenbound/src/\",\":account-abstraction/=lib/tokenbound/lib/account-abstraction/contracts/\",\":ds-test/=lib/tokenbound/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/tokenbound/lib/openzeppelin-contracts/lib/erc4626-tests/\",\":erc6551/=lib/tokenbound/lib/erc6551/src/\",\":forge-std/=lib/tokenbound/lib/forge-std/src/\",\":multicall-authenticated/=lib/tokenbound/lib/multicall-authenticated/\",\":openzeppelin-contracts/=lib/tokenbound/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/tokenbound/lib/openzeppelin-contracts/contracts/\",\":tokenbound/=lib/tokenbound/\"],\"viaIR\":true},\"sources\":{\"lib/tokenbound/lib/erc6551/src/interfaces/IERC6551Executable.sol\":{\"keccak256\":\"0x9bdb7a7e324bf36203ec6ff68c454446cae3993c1054b0356a081fa52ec43a29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9c6187c6633ec42ccb0ae5fdf4f1791fad7a505f29c8b55b1a5fe3ec9ee0148\",\"dweb:/ipfs/QmeANTvdkBMZeumsw6Qe7MHEjgkHJTLju4oQtAfo9HLzNV\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.25+commit.b61c2a91"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint8","name":"operation","type":"uint8"}],"stateMutability":"payable","type":"function","name":"execute","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]}],"devdoc":{"kind":"dev","methods":{"execute(address,uint256,bytes,uint8)":{"details":"Executes a low-level operation if the caller is a valid signer on the account. Reverts and bubbles up error if operation fails. Accounts implementing this interface MUST accept the following operation parameter values: - 0 = CALL - 1 = DELEGATECALL - 2 = CREATE - 3 = CREATE2 Accounts implementing this interface MAY support additional operations or restrict a signer's ability to execute certain operations.","params":{"data":"The encoded operation calldata","operation":"A value indicating the type of operation to perform","to":"The target address of the operation","value":"The Ether value to be sent to the target"},"returns":{"_0":"The result of the operation"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@eas/=node_modules/@ethereum-attestation-service/eas-contracts/contracts/","@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts/=lib/tokenbound/lib/openzeppelin-contracts/contracts/","@tokenbound/=lib/tokenbound/src/","account-abstraction/=lib/tokenbound/lib/account-abstraction/contracts/","ds-test/=lib/tokenbound/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/tokenbound/lib/openzeppelin-contracts/lib/erc4626-tests/","erc6551/=lib/tokenbound/lib/erc6551/src/","forge-std/=lib/tokenbound/lib/forge-std/src/","multicall-authenticated/=lib/tokenbound/lib/multicall-authenticated/","openzeppelin-contracts/=lib/tokenbound/lib/openzeppelin-contracts/","openzeppelin/=lib/tokenbound/lib/openzeppelin-contracts/contracts/","tokenbound/=lib/tokenbound/"],"optimizer":{"enabled":true,"runs":10000},"metadata":{"bytecodeHash":"none"},"compilationTarget":{"lib/tokenbound/lib/erc6551/src/interfaces/IERC6551Executable.sol":"IERC6551Executable"},"evmVersion":"shanghai","libraries":{},"viaIR":true},"sources":{"lib/tokenbound/lib/erc6551/src/interfaces/IERC6551Executable.sol":{"keccak256":"0x9bdb7a7e324bf36203ec6ff68c454446cae3993c1054b0356a081fa52ec43a29","urls":["bzz-raw://a9c6187c6633ec42ccb0ae5fdf4f1791fad7a505f29c8b55b1a5fe3ec9ee0148","dweb:/ipfs/QmeANTvdkBMZeumsw6Qe7MHEjgkHJTLju4oQtAfo9HLzNV"],"license":"MIT"}},"version":1},"id":9}